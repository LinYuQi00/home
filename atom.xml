<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Alan</title>
  <icon>https://www.gravatar.com/avatar/d35277cdb4ea373d23f143ea2440842b</icon>
  <subtitle>个人技术博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-01-24T08:14:30.501Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>mr.jiang</name>
    <email>173174646@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SpringBoot入门</title>
    <link href="http://yoursite.com/2018/01/09/SpringBoot%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2018/01/09/SpringBoot入门/</id>
    <published>2018-01-09T01:35:46.000Z</published>
    <updated>2018-01-24T08:14:30.501Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Spring-Boot要点"><a href="#Spring-Boot要点" class="headerlink" title="Spring Boot要点"></a>Spring Boot要点</h2><blockquote><p>Spring将很多魔法带入了Spring应用程序的开发之中，其中最重要的是以下四个核心。</p><ul><li>自动配置：针对很多Spring应用程序常见的应用功能，Spring Boot能自动提供相关配置</li><li>起步依赖：告诉Spring Boot需要什么功能，它就能引入需要的库。</li><li>命令行界面：这是Spring Boot的可选特性，借此你只需写代码就能完成完整的应用程序，无需传统项目构建。</li><li>Actuator：让你能够深入运行中的Spring Boot应用程序，一探究竟。</li></ul></blockquote><h2 id="初始化Spring-Boot项目"><a href="#初始化Spring-Boot项目" class="headerlink" title="初始化Spring Boot项目"></a>初始化Spring Boot项目</h2><blockquote><p>构建一个Sping Boot的Maven项目，强烈推荐Spring Initializr,它从本质上来说就是一个Web应用程序，它能为你生成Spring Boot项目结构。</p><ul><li>Spring Initializr有几种用法：</li></ul></blockquote><h2 id="1-通过IntelliJ-IDEA使用-强烈推荐"><a href="#1-通过IntelliJ-IDEA使用-强烈推荐" class="headerlink" title="1.通过IntelliJ IDEA使用(强烈推荐)"></a>1.通过IntelliJ IDEA使用(强烈推荐)</h2><blockquote><p>IntelliJ IDEA是非常流行的IDE，IntelliJ IDEA 14.1已经支持Spring Boot了。创建Spring Boot操作步骤如下：</p><ul><li>在File菜单里面选择 New &gt; Project,然后选择Spring Initializr，接着如下图一步步操作即可。<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2018/01/09/SpringBoot入门/sb1.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2018/01/09/SpringBoot入门/sb2.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2018/01/09/SpringBoot入门/sb3.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2018/01/09/SpringBoot入门/sb4.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul></blockquote><h2 id="2-通过Web界面使用"><a href="#2-通过Web界面使用" class="headerlink" title="2.通过Web界面使用"></a>2.通过Web界面使用</h2><p>2.1 访问：<a href="http://start.spring.io/" target="_blank" rel="noopener">http://start.spring.io/</a><br>2.2 选择构建工具Maven Project、Spring Boot版本1.5.1以及一些工程基本信息，可参考下图所示<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2018/01/09/SpringBoot入门/sb.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><br>2.3 点击Generate Project下载项目压缩包<br>2.4 导入到你的工程，如果是IDEA，则需要：<br>a. 菜单中选择File–&gt;New–&gt;Project from Existing Sources…<br>b. 选择解压后的项目文件夹，点击OK<br>c. 点击Import project from external model并选择Maven，点击Next到底为止<br>d. 若你的环境有多个版本的JDK，注意到选择Java SDK的版本</p><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><p>根据上面的操作已经初始化了一个Spring Boot的框架了，项目结构如下：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2018/01/09/SpringBoot入门/sb6.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><blockquote><p>如你所见，项目里面基本没有代码，除了几个空目录外，还包含如下几样东西。</p><ul><li>pom.xml：Maven构建说明文件。</li><li>DemoApplication.java：一个带有main()方法的类，用于启动应用程序（关键）。</li><li>DemoApplicationTests.java：一个空的Junit测试类，它加载了一个使用Spring Boot字典配置功能的Spring应用程序上下文。</li><li>application.properties：一个空的properties文件，你可以根据需要添加配置属性。</li></ul></blockquote><h2 id="解析pom-xml"><a href="#解析pom-xml" class="headerlink" title="解析pom.xml"></a>解析pom.xml</h2><ul><li><p>Spring Boot父级依赖</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2018/01/09/SpringBoot入门/sb10.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li><li><p>Spring Boot Maven插件</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2018/01/09/SpringBoot入门/sb11.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul><h2 id="应用入口类"><a href="#应用入口类" class="headerlink" title="应用入口类"></a>应用入口类</h2><blockquote><p>DemoApplication是一个很关键的启动类，程序的入口就是这里,为了演示简单，我们不再新建控制类，而是直接在这个入口类中编写，添加@RestController以及index方法，如下：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2018/01/09/SpringBoot入门/sb7.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><ul><li>@SpringBootApplication是Sprnig Boot项目的核心注解，主要目的是开启自动配置。</li><li>main方法这是一个标准的Java应用的main的方法，主要作用是作为项目启动的入口。</li><li>@RestController注解等价于@Controller+@ResponseBody的结合，使用这个注解的类里面的方法都以json格式输出。</li></ul></blockquote><h2 id="启动项目的三种方式："><a href="#启动项目的三种方式：" class="headerlink" title="启动项目的三种方式："></a>启动项目的三种方式：</h2><ul><li>DemoApplication的main方法</li><li><p>使用命令 mvn spring-boot:run”在命令行启动该应用，IDEA中该命令在如下位置：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2018/01/09/SpringBoot入门/sb8.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li><li><p>运行“mvn package”进行打包时，会打包成一个可以直接运行的 JAR 文件，使用“java -jar”命令就可以直接运行。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2018/01/09/SpringBoot入门/sb9.jpg" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></li></ul><blockquote><p>打开浏览器访问<a href="http://localhost:8080" target="_blank" rel="noopener">http://localhost:8080</a>, 你就能看到页面显示Hello Spring Boot效果了。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Spring-Boot要点&quot;&gt;&lt;a href=&quot;#Spring-Boot要点&quot; class=&quot;headerlink&quot; title=&quot;Spring Boot要点&quot;&gt;&lt;/a&gt;Spring Boot要点&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Spring将很多魔法带入
      
    
    </summary>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="spring" scheme="http://yoursite.com/tags/spring/"/>
    
      <category term="work" scheme="http://yoursite.com/tags/work/"/>
    
  </entry>
  
  <entry>
    <title>markdown常用语法</title>
    <link href="http://yoursite.com/2017/12/28/markdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2017/12/28/markdown常用语法/</id>
    <published>2017-12-28T10:26:04.000Z</published>
    <updated>2018-01-02T02:19:01.838Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote><p>Markdown 的目标是实现「易读易写」。<br>Markdown 是一种轻量级标记语言，它用简洁的语法代替排版，使我们专心于码字。同时，Markdown支持嵌入html标签。可读性，无论如何，都是最重要的。Markdown 语法受到一些既有 text-to-HTML 格式的影响，而最大灵感来源其实是纯文本电子邮件的格式。<br>注意：Markdown使用#、+、*等符号来标记， 符号后面必须跟上 至少1个 空格才有效！</p></blockquote><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><blockquote><p>在 标题开头 加上1~6个#，依次代表一级标题、二级标题….六级标题 </p></blockquote><h2 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h2><blockquote><p>两个<em>或-代表加粗，一个</em>或-代表斜体，<del>代表删除<br><strong>加粗文本</strong> 或者 <strong>加粗文本</strong><br><em>斜体文本</em>  或者<em>斜体文本</em><br>~~删除文本</del></p></blockquote><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><blockquote><p>Markdown 支持有序列表和无序列表。<br>1.1 无序列表使用-、+和*作为列表标记：</p><ul><li>666666</li><li>111111</li><li>999999</li></ul><p>1.2 有序列表则使用数字加英文句点.来表示：<br>1.0.1<br>2.0.1<br>3.0.1</p></blockquote><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote><p>引用以&gt;来表示，引用中支持多级引用、标题、列表、代码块、分割线等常规语法。<br>一级引用</p><blockquote><p>二级引用</p><blockquote><p>三级引用</p></blockquote></blockquote></blockquote><h2 id="图片与链接"><a href="#图片与链接" class="headerlink" title="图片与链接"></a>图片与链接</h2><blockquote><p>图片与链接的语法很像，区别在一个 ! 号。二者格式：<br>图片：<img src="" alt="">    <img src="/2017/12/28/markdown常用语法/图片地址" alt="图片文本"><br>链接：<a href=""></a>     <a href="链接地址">链接文本</a></p></blockquote><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>代码分为行内代码和代码块。<br>行内代码使用 <code>代码</code> 标识，可嵌入文字中<br>代码块使用4个空格或```标识</p><h2 id="脚注-注解"><a href="#脚注-注解" class="headerlink" title="脚注(注解)"></a>脚注(注解)</h2><p>使用[^]来定义脚注：<br>这是一个脚注的例子[^1]<br>[^1]: 这里是脚注</p><h2 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h2><blockquote><p>在一行中用三个以上的*、-、_来建立一个分隔线，行内不能有其他东西。也可以在符号间插入空格。</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Markdown 的目标是实现「易读易写」。&lt;br&gt;Markdown 是一种轻量级标记语言，它用简洁的语法代替排版
      
    
    </summary>
    
    
      <category term="day-to-day" scheme="http://yoursite.com/tags/day-to-day/"/>
    
  </entry>
  
  <entry>
    <title>快速、简洁且高效的博客框架 [Hexo]</title>
    <link href="http://yoursite.com/2017/12/28/hexo%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2017/12/28/hexo基本命令/</id>
    <published>2017-12-28T09:26:04.000Z</published>
    <updated>2018-01-02T02:18:53.945Z</updated>
    
    <content type="html"><![CDATA[<h2 id="中文社区"><a href="#中文社区" class="headerlink" title="中文社区"></a>中文社区</h2><blockquote><p>Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。<br>Hexo 支持 GitHub Flavored Markdown 的所有功能。<br>More info: <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/</a></p></blockquote><h2 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br><span class="line">$ hexo init blog</span><br><span class="line">$ <span class="built_in">cd</span> blog</span><br><span class="line">$ npm install</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/zh-cn/docs/commands.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/commands.html</a></p><h2 id="新建文章-hexo-new"><a href="#新建文章-hexo-new" class="headerlink" title="新建文章(hexo new)"></a>新建文章(hexo new)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><blockquote><p>可以在命令中指定文章的布局（layout），默认为 post，可以通过修改 _config.yml 中的 default_layout 参数来指定默认布局。<br>More info: <a href="https://hexo.io/zh-cn/docs/writing.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/writing.html</a></p></blockquote><h2 id="服务器-hexo-server"><a href="#服务器-hexo-server" class="headerlink" title="服务器(hexo-server)"></a>服务器(hexo-server)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-server --save</span><br><span class="line">$ hexo server</span><br><span class="line">$ hexo server -p 5000</span><br></pre></td></tr></table></figure><blockquote><p>安装完成后，输入以下命令以启动服务器，您的网站会在 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 下启动。<br>More info: <a href="https://hexo.io/zh-cn/docs/server.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/server.html</a></p></blockquote><h2 id="生成静态文件-Generating"><a href="#生成静态文件-Generating" class="headerlink" title="生成静态文件(Generating)"></a>生成静态文件(Generating)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br><span class="line">或</span><br><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/zh-cn/docs/generating.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/generating.html</a></p><h2 id="一键部署-Deployment"><a href="#一键部署-Deployment" class="headerlink" title="一键部署(Deployment)"></a>一键部署(Deployment)</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br><span class="line">或</span><br><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/zh-cn/docs/deployment.html" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/deployment.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;中文社区&quot;&gt;&lt;a href=&quot;#中文社区&quot; class=&quot;headerlink&quot; title=&quot;中文社区&quot;&gt;&lt;/a&gt;中文社区&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。&lt;br&gt;Hexo 支持 G
      
    
    </summary>
    
    
      <category term="day-to-day" scheme="http://yoursite.com/tags/day-to-day/"/>
    
  </entry>
  
  <entry>
    <title>vue</title>
    <link href="http://yoursite.com/2017/09/09/vue/"/>
    <id>http://yoursite.com/2017/09/09/vue/</id>
    <published>2017-09-09T08:43:52.000Z</published>
    <updated>2018-01-02T08:53:47.722Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vuejs"><a href="#vuejs" class="headerlink" title="vuejs"></a>vuejs</h1><blockquote><p>vue是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。</p><ul><li>中文官网: <a href="https://cn.vuejs.org/v2/guide/" target="_blank" rel="noopener">https://cn.vuejs.org/v2/guide/</a></li><li>github: <a href="https://github.com/vuejs/vue" target="_blank" rel="noopener">https://github.com/vuejs/vue</a></li></ul></blockquote><h1 id="vue-ui组件库"><a href="#vue-ui组件库" class="headerlink" title="vue ui组件库"></a>vue ui组件库</h1><h2 id="iview"><a href="#iview" class="headerlink" title="iview"></a>iview</h2><ul><li><a href="https://www.iviewui.com/" target="_blank" rel="noopener">https://www.iviewui.com/</a></li></ul><h2 id="eleme"><a href="#eleme" class="headerlink" title="eleme"></a>eleme</h2><ul><li><a href="http://element.eleme.io/#/" target="_blank" rel="noopener">http://element.eleme.io/#/</a></li></ul><h2 id="移动端ui库"><a href="#移动端ui库" class="headerlink" title="移动端ui库"></a>移动端ui库</h2><ul><li><a href="http://www.muse-ui.org/#/usage" target="_blank" rel="noopener">http://www.muse-ui.org/#/usage</a></li><li><a href="http://mint-ui.github.io/docs/#/zh-cn" target="_blank" rel="noopener">http://mint-ui.github.io/docs/#/zh-cn</a></li><li><a href="https://vux.li/#/?id=%E7%AE%80%E4%BB%8B" target="_blank" rel="noopener">https://vux.li/#/?id=%E7%AE%80%E4%BB%8B</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;vuejs&quot;&gt;&lt;a href=&quot;#vuejs&quot; class=&quot;headerlink&quot; title=&quot;vuejs&quot;&gt;&lt;/a&gt;vuejs&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;vue是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底
      
    
    </summary>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="work" scheme="http://yoursite.com/tags/work/"/>
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="vue" scheme="http://yoursite.com/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>前端构建工具</title>
    <link href="http://yoursite.com/2017/09/01/%E5%89%8D%E7%AB%AF%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/"/>
    <id>http://yoursite.com/2017/09/01/前端构建工具/</id>
    <published>2017-09-01T05:23:01.000Z</published>
    <updated>2018-01-02T08:36:37.637Z</updated>
    
    <content type="html"><![CDATA[<h1 id="为何要用构建工具？"><a href="#为何要用构建工具？" class="headerlink" title="为何要用构建工具？"></a>为何要用构建工具？</h1><blockquote><p>一句话：自动化。对于需要反复重复的任务，例如压缩（minification）、编译、单元测试、linting等，自动化工具可以减轻你的劳动，简化你的工作。当你在 Gruntfile 文件正确配置好了任务，任务运行器就会自动帮你或你的小组完成大部分无聊的工作</p></blockquote><h1 id="grunt"><a href="#grunt" class="headerlink" title="grunt"></a>grunt</h1><blockquote><p>Grunt生态系统非常庞大，并且一直在增长。由于拥有数量庞大的插件可供选择，因此，你可以利用Grunt自动完成任何事，并且花费最少的代价。如果找不到你所需要的插件，那就自己动手创造一个Grunt插件，然后将其发布到npm上吧。</p><ul><li><a href="http://www.gruntjs.net/getting-started" target="_blank" rel="noopener">http://www.gruntjs.net/getting-started</a></li></ul></blockquote><h1 id="gulp"><a href="#gulp" class="headerlink" title="gulp"></a>gulp</h1><blockquote><p>用自动化构建工具增强你的工作流程！</p><ul><li><a href="https://www.gulpjs.com.cn/docs/api/" target="_blank" rel="noopener">https://www.gulpjs.com.cn/docs/api/</a></li></ul></blockquote><h1 id="webpack"><a href="#webpack" class="headerlink" title="webpack"></a>webpack</h1><blockquote><p>让一切变得简单。本质上，webpack 是一个现代 JavaScript 应用程序的静态模块打包器(module bundler)。当 webpack 处理应用程序时，它会递归地构建一个依赖关系图(dependency graph)，其中包含应用程序需要的每个模块，然后将所有这些模块打包成一个或多个 bundle。</p><ul><li><a href="https://doc.webpack-china.org/concepts/" target="_blank" rel="noopener">https://doc.webpack-china.org/concepts/</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;为何要用构建工具？&quot;&gt;&lt;a href=&quot;#为何要用构建工具？&quot; class=&quot;headerlink&quot; title=&quot;为何要用构建工具？&quot;&gt;&lt;/a&gt;为何要用构建工具？&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;一句话：自动化。对于需要反复重复的任务，例如压缩（mini
      
    
    </summary>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="前端构建工具" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>html5</title>
    <link href="http://yoursite.com/2017/08/18/html5/"/>
    <id>http://yoursite.com/2017/08/18/html5/</id>
    <published>2017-08-18T09:06:37.000Z</published>
    <updated>2018-01-02T09:36:16.255Z</updated>
    
    <content type="html"><![CDATA[<h1 id="html5"><a href="#html5" class="headerlink" title="html5"></a>html5</h1><blockquote><p>2012年12月17日，万维网联盟（W3C）正式宣布凝结了大量网络工作者心血的HTML5规范已经正式定稿。根据W3C的发言稿称：“HTML5是开放的Web网络平台的奠基石。”包括HTML和XHTML的标签，相关的API、Canvas等，同时HTML5的图像img标签及svg也进行了改进，性能得到进一步提升。<br>支持Html5的浏览器包括Firefox（火狐浏览器），IE9及其更高版本，Chrome（谷歌浏览器），Safari，Opera等；国内的傲游浏览器（Maxthon），以及基于IE或Chromium（Chrome的工程版或称实验版）所推出的360浏览器、搜狗浏览器、QQ浏览器、猎豹浏览器等国产浏览器同样具备支持HTML5的能力。</p></blockquote><h1 id="HTML5是什么？"><a href="#HTML5是什么？" class="headerlink" title="HTML5是什么？"></a>HTML5是什么？</h1><blockquote><p>HTML5 是 HTML标准的最新演进版本,它是一个新的 HTML 语言版本包含了新的元素，属性和行为，同时包含了一系列可以被用来让 Web 站点和应用更加多样化，功能更强大的技术。 这套技术往往被称作 HTML5 和它的朋友们，通常简称为 HTML5</p></blockquote><h2 id="有哪些新特性？"><a href="#有哪些新特性？" class="headerlink" title="有哪些新特性？"></a>有哪些新特性？</h2><ol><li>语意特性,添加(header, nav)等标签</li><li>多媒体， 用于媒介回放的 video 和 audio 元素</li><li>图像效果，用于绘画的 canvas 元素，svg元素等</li><li>离线 &amp; 存储,对本地离线存储的更好的支持,local Store,Cookies等</li><li>设备兼容特性 ，HTML5提供了前所未有的数据与应用接入开放接口。使外部应用可以直接与浏览器内部的数据直接相连，</li><li>连接特性，更有效的连接工作效率，使得基于页面的实时聊天，更快速的网页游戏体验，更优化的在线交流得到了实现。HTML5拥有更有效的服务器推送技术，Server-Sent Event和WebSockets就是其中的两个特性，这两个特性能够帮助我们实现服务器将数据“推送”到客户端的功能</li><li>性能与集成特性，HTML5会通过XMLHttpRequest2等技术，帮助您的Web应用和网站在多样化的环境中更快速的工作</li></ol><h2 id="有哪些新增标签？"><a href="#有哪些新增标签？" class="headerlink" title="有哪些新增标签？"></a>有哪些新增标签？</h2><ol><li>多媒体：(audio, video, source, embed, track)</li><li>新表单元素：(datalist, output, keygen)</li><li>新文档节段和纲要: (header页面头部、section章节、aside边栏、article文档内容、footer页面底部、section章节、aside边栏、article文档内容、footer页面底部等)</li></ol><h2 id="如何让低版本的-IE-支持-HTML5新标签？"><a href="#如何让低版本的-IE-支持-HTML5新标签？" class="headerlink" title="如何让低版本的 IE 支持 HTML5新标签？"></a>如何让低版本的 IE 支持 HTML5新标签？</h2><blockquote><p>使用html5shiv可以解决ie低版本不兼容的问题，只需要在head中加上,当版本低于IE9时，浏览器会加载html5.js脚本，使得支持html5的新功能，也可以将脚本文件下载到本地</p></blockquote><h2 id="input-有哪些新增类型？"><a href="#input-有哪些新增类型？" class="headerlink" title="input 有哪些新增类型？"></a>input 有哪些新增类型？</h2><ul><li>color,选择颜色</li><li>date 选择日期</li><li>email 用于检测输入的是否为email格式的地址</li><li>month 选择月份</li><li>number 用于应该包含数值的输入域，可以设定对输入值的限定</li><li>range 用于定义一个滑动条，表示范围</li><li>search 用于搜索，比如站点搜索或 Google 搜索</li><li>tel 输入电话号码</li><li>time 选择时间</li><li>url 输入网址</li><li>week 选择周和年</li></ul><h2 id="浏览器本地存储中-cookie-和-localStorage-有什么区别？-localStorage-如何存储删除数据。"><a href="#浏览器本地存储中-cookie-和-localStorage-有什么区别？-localStorage-如何存储删除数据。" class="headerlink" title="浏览器本地存储中 cookie 和 localStorage 有什么区别？ localStorage 如何存储删除数据。"></a>浏览器本地存储中 cookie 和 localStorage 有什么区别？ localStorage 如何存储删除数据。</h2><blockquote><p>共同点：sessionStorage、localStorage和cookie都由浏览器存储在本地的数据。<br>区别: </p><ol><li>cookie数据始终在同源的http请求中携带（即使不需要），即cookie在浏览器和服务器间来回传递，localStorage不会自动把数据发给服务器，仅在本地保存</li><li>cookie数据还有路径（path）的概念，可以限制cookie只属于某个路径下，存储大小限制也不同，cookie数据不能超过4k，同时因为每次http请求都会携带cookie，所以cookie只适合保存很小的数据，如会话标识。localStorage 虽然也有存储大小的限制，但比cookie大得多，可以达到5M或更大。localStorage不会自动把数据发给服务器</li><li>cookie只在设置的cookie过期时间之前一直有效，即使窗口或浏览器关闭。localStorage：始终有效，窗口或浏览器关闭也一直保存，因此用作持久数据</li><li>localStorage支持事件通知机制，可以将数据更新的通知发送给监听者。 api 接口使用更方便。而cookie的原生接口不友好，需要程序员自己封装</li></ol><p>HTML5中提供了localStorage对象可以将数据长期保存在客户端，除非人为清除，localStorage提供了几个方法:</p><ol><li>存储:localStorage.setItem(key,value)如果key存在时，更新value</li><li>获取 localStorage.getItem(key)如果key不存在返回null</li><li>删除 localStorage.removeItem(key)一旦删除，key对应的数据将会全部删除</li><li>全部清除 localStorage.clear() 使用removeItem逐个删除太麻烦，可以使用clear,执行的后果是会清除所有localStorage对象保存的数据</li></ol></blockquote><ul><li>注意：localStorage存数的数据是不能跨浏览器共用的，一个浏览器只能读取各自浏览器的数据,储存空间5M。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;html5&quot;&gt;&lt;a href=&quot;#html5&quot; class=&quot;headerlink&quot; title=&quot;html5&quot;&gt;&lt;/a&gt;html5&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;2012年12月17日，万维网联盟（W3C）正式宣布凝结了大量网络工作者心血的HTML5规
      
    
    </summary>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="html5" scheme="http://yoursite.com/tags/html5/"/>
    
  </entry>
  
  <entry>
    <title>css3</title>
    <link href="http://yoursite.com/2017/08/16/css3/"/>
    <id>http://yoursite.com/2017/08/16/css3/</id>
    <published>2017-08-16T09:09:38.000Z</published>
    <updated>2018-01-02T09:21:57.310Z</updated>
    
    <content type="html"><![CDATA[<h1 id="css3"><a href="#css3" class="headerlink" title="css3"></a>css3</h1><blockquote><p>CSS即层叠样式表（Cascading StyleSheet）。 在网页制作时采用层叠样式表技术，可以有效地对页面的布局、字体、颜色、背景和其它效果实现更加精确的控制。</p><ul><li><a href="http://www.phpstudy.net/css3/" target="_blank" rel="noopener">http://www.phpstudy.net/css3/</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;css3&quot;&gt;&lt;a href=&quot;#css3&quot; class=&quot;headerlink&quot; title=&quot;css3&quot;&gt;&lt;/a&gt;css3&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;CSS即层叠样式表（Cascading StyleSheet）。 在网页制作时采用层叠样式表技术，
      
    
    </summary>
    
    
      <category term="css3" scheme="http://yoursite.com/tags/css3/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>webpack详解</title>
    <link href="http://yoursite.com/2017/08/02/webpack%E8%AF%A6%E8%A7%A3/"/>
    <id>http://yoursite.com/2017/08/02/webpack详解/</id>
    <published>2017-08-02T03:27:23.000Z</published>
    <updated>2018-01-02T08:30:30.853Z</updated>
    
    <content type="html"><![CDATA[<h1 id="为什么使用webpack？"><a href="#为什么使用webpack？" class="headerlink" title="为什么使用webpack？"></a>为什么使用webpack？</h1><ul><li>拆包–&gt;允许按需加载</li><li>Plugin–&gt;适应大型项目</li><li>Loader–&gt;定制资源包</li></ul><h1 id="webpack核心概念–Module"><a href="#webpack核心概念–Module" class="headerlink" title="webpack核心概念–Module"></a>webpack核心概念–Module</h1><h2 id="Module模块"><a href="#Module模块" class="headerlink" title="Module模块"></a>Module模块</h2><ol><li>js</li><li>css，font，images…</li></ol><blockquote><p>函数写法：<br>var mod1 = function() {};</p><p>对象写法：<br>var mod2 =  {<br>    init： function() {}<br>};</p><p>立即执行函数：<br>var mod3 = (function(win) {<br>})(window);</p></blockquote><h1 id="webpack核心概念–Chunk"><a href="#webpack核心概念–Chunk" class="headerlink" title="webpack核心概念–Chunk"></a>webpack核心概念–Chunk</h1><h2 id="Chunk块"><a href="#Chunk块" class="headerlink" title="Chunk块"></a>Chunk块</h2><p>Many small modules combined<br>Entry Chunk，Output Chunk，Common Chunk</p><h1 id="webpack核心概念–定位"><a href="#webpack核心概念–定位" class="headerlink" title="webpack核心概念–定位"></a>webpack核心概念–定位</h1><h2 id="Module-Loader（模块加载器）"><a href="#Module-Loader（模块加载器）" class="headerlink" title="Module Loader（模块加载器）"></a>Module Loader（模块加载器）</h2><h2 id="Module-bundler（模块打包工具）"><a href="#Module-bundler（模块打包工具）" class="headerlink" title="Module bundler（模块打包工具）"></a>Module bundler（模块打包工具）</h2><ol><li>browserify</li><li>webpack</li></ol><blockquote><p>特点：</p><ol><li>浏览器中加载入口及依赖</li><li>执行入口及依赖代码</li><li>分析及合成模块系统</li><li>生成文件束（bundle/chunk）</li></ol></blockquote><h1 id="webpack配置"><a href="#webpack配置" class="headerlink" title="webpack配置"></a>webpack配置</h1><ul><li>entry：源文件</li><li>output：生成文件</li><li>loader：编译文件</li><li>plugins：插件</li><li>resolve：文件路径指向</li></ul><h2 id="编译资源"><a href="#编译资源" class="headerlink" title="编译资源"></a>编译资源</h2><blockquote><p>将源文件编译成浏览器能识别的代码：</p><ol><li>es6–&gt;es5</li><li>image–&gt;base64</li><li>sass/less–&gt;css</li><li>etc…</li></ol></blockquote><h2 id="提高构建速度"><a href="#提高构建速度" class="headerlink" title="提高构建速度"></a>提高构建速度</h2><ol><li>将大型库外链</li><li>将库预先编译</li><li>减少构建搜索或编译路径</li><li>缓存</li><li>并行</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;为什么使用webpack？&quot;&gt;&lt;a href=&quot;#为什么使用webpack？&quot; class=&quot;headerlink&quot; title=&quot;为什么使用webpack？&quot;&gt;&lt;/a&gt;为什么使用webpack？&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;拆包–&amp;gt;允许按需加载&lt;/li&gt;
&lt;
      
    
    </summary>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="webpack" scheme="http://yoursite.com/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>emmet</title>
    <link href="http://yoursite.com/2017/07/20/emmet/"/>
    <id>http://yoursite.com/2017/07/20/emmet/</id>
    <published>2017-07-20T05:51:30.000Z</published>
    <updated>2018-01-02T08:27:58.343Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><blockquote><p>Emmet (前身为 Zen Coding) 是一个能大幅度提高前端开发效率的一个工具.Emmet把片段这个概念提高到了一个新的层次：你可以设置CSS形式的能够动态被解析的表达式，然后根据你所输入的缩写来得到相应的内容。Emmet是很成熟的并且非常适用于编写HTML/XML 和 CSS 代码的前端开发人员，但也可以用于编程语言.</p><ul><li><a href="https://www.w3cplus.com/tools/emmet-cheat-sheet.html" target="_blank" rel="noopener">https://www.w3cplus.com/tools/emmet-cheat-sheet.html</a></li></ul></blockquote><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><h2 id="后代："><a href="#后代：" class="headerlink" title="后代：>"></a>后代：></h2><blockquote><p>缩写：nav&gt;ul&gt;li</p></blockquote><h2 id="兄弟："><a href="#兄弟：" class="headerlink" title="兄弟：+"></a>兄弟：+</h2><blockquote><p>缩写：div+p+bq</p></blockquote><h2 id="上级："><a href="#上级：" class="headerlink" title="上级：^"></a>上级：^</h2><blockquote><p>缩写：div+div&gt;p&gt;span+em^bq</p></blockquote><h2 id="分组："><a href="#分组：" class="headerlink" title="分组：()"></a>分组：()</h2><blockquote><p>缩写：(div&gt;dl&gt;(dt+dd)*3)+footer&gt;p</p></blockquote><h2 id="乘法："><a href="#乘法：" class="headerlink" title="乘法：*"></a>乘法：*</h2><blockquote><p>缩写：ul&gt;li*</p></blockquote><h2 id="自增符号："><a href="#自增符号：" class="headerlink" title="自增符号：$"></a>自增符号：$</h2><blockquote><p>缩写：ul&gt;li.item$*5</p></blockquote><h2 id="ID和类属性"><a href="#ID和类属性" class="headerlink" title="ID和类属性"></a>ID和类属性</h2><blockquote><p>缩写：#header<br>缩写: .class</p></blockquote><h2 id="自定义属性"><a href="#自定义属性" class="headerlink" title="自定义属性"></a>自定义属性</h2><blockquote><p>缩写：p[title=”Hello world”]</p></blockquote><h2 id="文本："><a href="#文本：" class="headerlink" title="文本：{}"></a>文本：{}</h2><blockquote><p>缩写：a{Click me}</p></blockquote><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><blockquote><p>缩写：!</p></blockquote><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><blockquote><p>a、p、span、img、input、btn</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Emmet (前身为 Zen Coding) 是一个能大幅度提高前端开发效率的一个工具.Emmet把片段这个概念提
      
    
    </summary>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="emmet" scheme="http://yoursite.com/tags/emmet/"/>
    
  </entry>
  
  <entry>
    <title>ps切图就这么简单</title>
    <link href="http://yoursite.com/2017/07/12/ps%E5%88%87%E5%9B%BE%E5%B0%B1%E8%BF%99%E4%B9%88%E7%AE%80%E5%8D%95/"/>
    <id>http://yoursite.com/2017/07/12/ps切图就这么简单/</id>
    <published>2017-07-12T02:27:52.000Z</published>
    <updated>2018-01-24T08:13:08.022Z</updated>
    
    <content type="html"><![CDATA[<h1 id="photoshop界面设置"><a href="#photoshop界面设置" class="headerlink" title="photoshop界面设置"></a>photoshop界面设置</h1><h2 id="新建设置（ctrl-n）"><a href="#新建设置（ctrl-n）" class="headerlink" title="新建设置（ctrl+n）"></a>新建设置（ctrl+n）</h2><ul><li>预览：自定义</li><li>分辨率：72像素/英寸</li><li>颜色模式：RGB颜色 8位</li><li>背景内容：透明</li><li>新建图层ctrl+shift+n</li></ul><h2 id="移动工具（v）"><a href="#移动工具（v）" class="headerlink" title="移动工具（v）"></a>移动工具（v）</h2><ul><li>自动选择：图层</li><li>按住ctrl键，在图层上单击鼠标左键，定位到选中的图层</li></ul><h2 id="视图设置"><a href="#视图设置" class="headerlink" title="视图设置"></a>视图设置</h2><ul><li>视图 - 显示 - 智能参考线</li><li>标尺（ctrl+r）</li><li>窗口（图层、历史记录、信息、字符）</li><li>信息选项-模式：RGB颜色 - 标尺单位：像素 - 文档尺寸</li><li>编辑 - 首选项 - 单位与标尺：像素</li><li>窗口 - 工作区 - 新建工作区</li></ul><h1 id="photoshop简单工具操作"><a href="#photoshop简单工具操作" class="headerlink" title="photoshop简单工具操作"></a>photoshop简单工具操作</h1><h2 id="选区图层"><a href="#选区图层" class="headerlink" title="选区图层"></a>选区图层</h2><h2 id="选取工具（m）"><a href="#选取工具（m）" class="headerlink" title="选取工具（m）"></a>选取工具（m）</h2><ul><li>填充</li><li>选取四大属性</li><li>切换shift+m，alt</li><li>变换shift</li></ul><h2 id="套索工具（l）"><a href="#套索工具（l）" class="headerlink" title="套索工具（l）"></a>套索工具（l）</h2><h2 id="快速选择工具-w"><a href="#快速选择工具-w" class="headerlink" title="快速选择工具(w)"></a>快速选择工具(w)</h2><ul><li>删除选取ctrl+d</li></ul><h2 id="裁剪工具（c）"><a href="#裁剪工具（c）" class="headerlink" title="裁剪工具（c）"></a>裁剪工具（c）</h2><ul><li>自动选择，按ctrl选择选区</li></ul><h2 id="吸管工具（i）"><a href="#吸管工具（i）" class="headerlink" title="吸管工具（i）"></a>吸管工具（i）</h2><p>-吸取颜色</p><h2 id="画笔工具（b）"><a href="#画笔工具（b）" class="headerlink" title="画笔工具（b）"></a>画笔工具（b）</h2><h2 id="仿制图章工具（s）"><a href="#仿制图章工具（s）" class="headerlink" title="仿制图章工具（s）"></a>仿制图章工具（s）</h2><h2 id="历史记录画笔工具（y）"><a href="#历史记录画笔工具（y）" class="headerlink" title="历史记录画笔工具（y）"></a>历史记录画笔工具（y）</h2><h2 id="橡皮擦工具（e）"><a href="#橡皮擦工具（e）" class="headerlink" title="橡皮擦工具（e）"></a>橡皮擦工具（e）</h2><h2 id="渐变工具（g）"><a href="#渐变工具（g）" class="headerlink" title="渐变工具（g）"></a>渐变工具（g）</h2><h2 id="钢笔工具（p）"><a href="#钢笔工具（p）" class="headerlink" title="钢笔工具（p）"></a>钢笔工具（p）</h2><ul><li>点击滑动，小角可以拉动</li><li>路径：工作区域</li><li>ctrl+鼠标左键选区</li></ul><h2 id="横排文字工具（p）"><a href="#横排文字工具（p）" class="headerlink" title="横排文字工具（p）"></a>横排文字工具（p）</h2><h2 id="矩形工具（u）"><a href="#矩形工具（u）" class="headerlink" title="矩形工具（u）"></a>矩形工具（u）</h2><ul><li>前景色填充（alt+del）</li><li>背景色填充（ctrl+del）</li><li>右键-变换选区 - shirt+alt  - ent - del</li><li>自由变化（ctrl+t），按住shift</li><li>复制按住alt</li></ul><h2 id="视图（v）"><a href="#视图（v）" class="headerlink" title="视图（v）"></a>视图（v）</h2><ul><li>标尺（ctrl+r）</li><li>参考线（alt+v+e），关闭（ctrl+；）</li></ul><h1 id="ps切图"><a href="#ps切图" class="headerlink" title="ps切图"></a>ps切图</h1><h2 id="切片工具（c）"><a href="#切片工具（c）" class="headerlink" title="切片工具（c）"></a>切片工具（c）</h2><ul><li>切换（shift+c）</li><li>调整（alt）</li></ul><h2 id="参考线-切片"><a href="#参考线-切片" class="headerlink" title="参考线-切片"></a>参考线-切片</h2><ul><li>基于参考线的切片</li><li>存储web（crtl+alt+shift+s）保存</li></ul><h1 id="自动切图"><a href="#自动切图" class="headerlink" title="自动切图"></a>自动切图</h1><h2 id="文件-脚本-将图层导出到文件"><a href="#文件-脚本-将图层导出到文件" class="headerlink" title="文件-脚本-将图层导出到文件"></a>文件-脚本-将图层导出到文件</h2><h2 id="cc："><a href="#cc：" class="headerlink" title="cc："></a>cc：</h2><ol><li>编辑-首选项-增效工具-启用生成器</li><li>文件-图片资源</li><li>复制css：图层-复制css</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;photoshop界面设置&quot;&gt;&lt;a href=&quot;#photoshop界面设置&quot; class=&quot;headerlink&quot; title=&quot;photoshop界面设置&quot;&gt;&lt;/a&gt;photoshop界面设置&lt;/h1&gt;&lt;h2 id=&quot;新建设置（ctrl-n）&quot;&gt;&lt;a href
      
    
    </summary>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>webUI</title>
    <link href="http://yoursite.com/2017/07/10/webUI/"/>
    <id>http://yoursite.com/2017/07/10/webUI/</id>
    <published>2017-07-10T03:11:49.000Z</published>
    <updated>2018-01-02T08:31:45.187Z</updated>
    
    <content type="html"><![CDATA[<h1 id="WEB-UI是什么？"><a href="#WEB-UI是什么？" class="headerlink" title="WEB-UI是什么？"></a>WEB-UI是什么？</h1><blockquote><p>UI本意是用户界面，是英文User Interface的缩写，是用户与界面的交互关系。方向：用户研究、交互设计、界面设计。</p><ul><li>功能为主</li><li>用户为主</li></ul></blockquote><h1 id="屏幕分辨率"><a href="#屏幕分辨率" class="headerlink" title="屏幕分辨率"></a>屏幕分辨率</h1><blockquote><p>以水平和垂直像素来衡量</p></blockquote><h2 id="iMac分辨率："><a href="#iMac分辨率：" class="headerlink" title="iMac分辨率："></a>iMac分辨率：</h2><ul><li>21寸1920<em>1080 &amp; Retina 4K 4096</em>2304</li><li>27寸 Retina 5K 5120*2880</li></ul><h2 id="ios手机："><a href="#ios手机：" class="headerlink" title="ios手机："></a>ios手机：</h2><ul><li>4s 3.5寸 960*640 </li><li>5s 4.0寸 1136*640</li><li>6 4.7寸 1334*750</li><li>6s 5.5寸 1920*1080</li></ul><h2 id="PC："><a href="#PC：" class="headerlink" title="PC："></a>PC：</h2><ul><li>19寸 1440*900</li><li>20寸 1600*900</li><li>21.5寸 1920*1080</li><li>22寸 1680*1050</li></ul><h2 id="显示器屏幕长宽比："><a href="#显示器屏幕长宽比：" class="headerlink" title="显示器屏幕长宽比："></a>显示器屏幕长宽比：</h2><ul><li>5:4 = 1.25</li><li>4:3 = 1.33</li><li>16:10 = 1.60</li><li>16:9 = 1.77</li></ul><h2 id="常见显示器屏幕分辨率："><a href="#常见显示器屏幕分辨率：" class="headerlink" title="常见显示器屏幕分辨率："></a>常见显示器屏幕分辨率：</h2><h3 id="宽高比1-25"><a href="#宽高比1-25" class="headerlink" title="宽高比1.25"></a>宽高比1.25</h3><ul><li>800*640</li><li>1280*1024</li></ul><h3 id="宽高比1-33"><a href="#宽高比1-33" class="headerlink" title="宽高比1.33"></a>宽高比1.33</h3><ul><li>800*600</li><li>1280*960</li><li>1024*768</li><li>1400*1050</li><li>1600*1200</li><li>2048*1536</li></ul><h3 id="宽高比1-60"><a href="#宽高比1-60" class="headerlink" title="宽高比1.60"></a>宽高比1.60</h3><ul><li>1280*800</li><li>1440*900</li><li>1680*1050</li><li>1920*1200</li></ul><h3 id="宽高比1-77"><a href="#宽高比1-77" class="headerlink" title="宽高比1.77"></a>宽高比1.77</h3><ul><li>1280*720</li><li>1440*810</li><li>1680*945</li><li>1920*1080</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;WEB-UI是什么？&quot;&gt;&lt;a href=&quot;#WEB-UI是什么？&quot; class=&quot;headerlink&quot; title=&quot;WEB-UI是什么？&quot;&gt;&lt;/a&gt;WEB-UI是什么？&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;UI本意是用户界面，是英文User Interfa
      
    
    </summary>
    
    
      <category term="UI" scheme="http://yoursite.com/tags/UI/"/>
    
  </entry>
  
  <entry>
    <title>UI设计</title>
    <link href="http://yoursite.com/2017/07/10/UI%E8%AE%BE%E8%AE%A1/"/>
    <id>http://yoursite.com/2017/07/10/UI设计/</id>
    <published>2017-07-10T02:54:33.000Z</published>
    <updated>2018-01-02T08:31:51.101Z</updated>
    
    <content type="html"><![CDATA[<h1 id="界面设计流程"><a href="#界面设计流程" class="headerlink" title="界面设计流程"></a>界面设计流程</h1><blockquote><p>需求-策划-原型图-设计图-制作-上线发布</p></blockquote><h1 id="三大部分：版式-制作-输出"><a href="#三大部分：版式-制作-输出" class="headerlink" title="三大部分：版式-制作-输出"></a>三大部分：版式-制作-输出</h1><h2 id="版式："><a href="#版式：" class="headerlink" title="版式："></a>版式：</h2><ul><li>分析需求内容</li><li>绘制草图</li></ul><h2 id="制作："><a href="#制作：" class="headerlink" title="制作："></a>制作：</h2><ul><li>优化版式结构</li><li>填充内容</li><li>样式设计</li></ul><h2 id="输出："><a href="#输出：" class="headerlink" title="输出："></a>输出：</h2><ul><li>优化</li><li>切图</li><li>输出</li></ul><h1 id="设计规范"><a href="#设计规范" class="headerlink" title="设计规范"></a>设计规范</h1><ol><li>色彩规范</li><li>文字规范</li><li>图标规范</li><li>控件规范</li></ol><h1 id="web设计"><a href="#web设计" class="headerlink" title="web设计"></a>web设计</h1><blockquote><p>设计纬度：版式、色彩、图片、字体、段落、细节</p><ul><li>界面设计流程</li><li>基本规范：设计规范</li></ul></blockquote><h2 id="字体选择："><a href="#字体选择：" class="headerlink" title="字体选择："></a>字体选择：</h2><ul><li>使用通用字体的样式属性</li><li>使用在线字体</li></ul><blockquote><p>色彩运用：色相、明度、纯度色彩三要素（对比色、互补色、同类色）</p><p>尺寸单位：px，pt   1pt=1/72英寸、PPI（DPI）、em</p><p>图像格式：JPG、GIF、PNG</p><p>视觉层次：透视、景深、元素层次、色彩层次</p><p>切图：ps</p><p>首页设计：登录/不登录</p></blockquote><h2 id="专题设计："><a href="#专题设计：" class="headerlink" title="专题设计："></a>专题设计：</h2><ol><li>结构</li><li>风格</li><li>头图</li><li>内容<blockquote><p>创意 版式 色彩 细节</p></blockquote></li></ol><h2 id="banner设计："><a href="#banner设计：" class="headerlink" title="banner设计："></a>banner设计：</h2><ol><li>需求</li><li>风格</li><li>版式</li><li>配色</li></ol><h2 id="听说读写"><a href="#听说读写" class="headerlink" title="听说读写"></a>听说读写</h2><blockquote><p>听：多收集、行业信息、发展趋势<br>说：与人交流、同行、用户<br>读：生活中、多观摩分析、别人作品<br>写：着手练习、临摹、优化</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;界面设计流程&quot;&gt;&lt;a href=&quot;#界面设计流程&quot; class=&quot;headerlink&quot; title=&quot;界面设计流程&quot;&gt;&lt;/a&gt;界面设计流程&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;需求-策划-原型图-设计图-制作-上线发布&lt;/p&gt;
&lt;/blockquote&gt;
&lt;
      
    
    </summary>
    
    
      <category term="UI" scheme="http://yoursite.com/tags/UI/"/>
    
  </entry>
  
  <entry>
    <title>web前端工具</title>
    <link href="http://yoursite.com/2017/07/07/web%E5%89%8D%E7%AB%AF%E5%B7%A5%E5%85%B7/"/>
    <id>http://yoursite.com/2017/07/07/web前端工具/</id>
    <published>2017-07-07T08:26:56.000Z</published>
    <updated>2018-01-02T08:31:23.272Z</updated>
    
    <content type="html"><![CDATA[<h2 id="nodejs环境"><a href="#nodejs环境" class="headerlink" title="nodejs环境"></a>nodejs环境</h2><p>1.下载地址：</p><pre><code>中文文档-http://nodejs.cn/英文文档-https://nodejs.org/en/</code></pre><p>2.安装步骤：</p><p>1）下载nodejs安装包，傻瓜式安装；</p><p>2）检查是否安装成功： 在命令窗口输入 node -v</p><p>3）安装成功nodejs自带npm包：npm -v</p><h2 id="webpack介绍"><a href="#webpack介绍" class="headerlink" title="webpack介绍"></a>webpack介绍</h2><p>概念:webpack 是一个现代 JavaScript 应用程序的模块打包器(module bundler)。当 webpack 处理应用程序时，它会递归地构建一个依赖关系图(dependency graph)，其中包含应用程序需要的每个模块，然后将所有这些模块打包成少量的 bundle - 通常只有一个，由浏览器加载。</p><p>它是高度可配置的，但是，在开始前你需要先理解四个核心概念：入口(entry)、输出(output)、loader、插件(plugins)。</p><ol><li>文档地址：</li></ol><p>中文文档：<a href="https://doc.webpack-china.org/" target="_blank" rel="noopener">https://doc.webpack-china.org/</a></p><p>英文文档： <a href="http://webpack.github.io/docs/" target="_blank" rel="noopener">http://webpack.github.io/docs/</a></p><p>2.安装webpack</p><p>npm安装webpack： npm install webpack -g 本机全局安装</p><p>是否安装成功：webpack -v</p><h2 id="淘宝镜像"><a href="#淘宝镜像" class="headerlink" title="淘宝镜像"></a>淘宝镜像</h2><blockquote><p>使用说明</p></blockquote><p>你可以使用我们定制的 cnpm (gzip 压缩支持) 命令行工具代替默认的 npm:</p><p>npm install -g cnpm –registry=<a href="https://registry.npm.taobao.org" target="_blank" rel="noopener">https://registry.npm.taobao.org</a></p><p>文档地址：<a href="http://npm.taobao.org/" target="_blank" rel="noopener">http://npm.taobao.org/</a></p><h2 id="nrm-–-NPM-registry-管理工具"><a href="#nrm-–-NPM-registry-管理工具" class="headerlink" title="nrm – NPM registry 管理工具"></a>nrm – NPM registry 管理工具</h2><p>开发的npm registry 管理工具 nrm, 能够查看和切换当前使用的registry, 最近NPM经常 down 掉, 这个还是很有用的哈哈</p><p>安装</p><p>npm install nrm -g</p><p>文档地址：<a href="http://cnodejs.org/topic/5326e78c434e04172c006826" target="_blank" rel="noopener">http://cnodejs.org/topic/5326e78c434e04172c006826</a></p><h2 id="git安装"><a href="#git安装" class="headerlink" title="git安装"></a>git安装</h2><blockquote><p>在 Windows 上安装</p></blockquote><p>在 Windows 上安装 Git 同样轻松，有个叫做 msysGit 的项目提供了安装包，可以到 GitHub 的页面上下载 exe 安装文件并运行：</p><p><a href="http://msysgit.github.com/" target="_blank" rel="noopener">http://msysgit.github.com/</a><br>完成安装之后，就可以使用命令行的 git 工具（已经自带了 ssh 客户端）了，另外还有一个图形界面的 Git 项目管理工具。</p><p>克隆项目：git clone git://git.kernel.org/pub/scm/git/git.git</p><h2 id="编辑器-IDE"><a href="#编辑器-IDE" class="headerlink" title="编辑器(IDE)"></a>编辑器(IDE)</h2><blockquote><p>sublime text编辑器 </p></blockquote><p>下载地址：<a href="http://www.sublimetext.com/3" target="_blank" rel="noopener">http://www.sublimetext.com/3</a></p><p>Sublime Text 3 3126 注册码</p><p>测试通过：</p><p>—– BEGIN LICENSE —–<br>Michael Barnes<br>Single User License<br>EA7E-821385<br>8A353C41 872A0D5C DF9B2950 AFF6F667<br>C458EA6D 8EA3C286 98D1D650 131A97AB<br>AA919AEC EF20E143 B361B1E7 4C8B7F04<br>B085E65E 2F5F5360 8489D422 FB8FC1AA<br>93F6323C FD7F7544 3F39C318 D95E6480<br>FCCC7561 8A4A1741 68FA4223 ADCEDE07<br>200C25BE DBBC4855 C4CFB774 C5EC138C<br>0FEC1CEF D9DCECEC D3A5DAD1 01316C36<br>—— END LICENSE ——</p><p>HBuilder编辑器<br><a href="http://www.dcloud.io/" target="_blank" rel="noopener">http://www.dcloud.io/</a></p><p>webstorm编辑器<br><a href="https://www.jetbrains.com/webstorm/" target="_blank" rel="noopener">https://www.jetbrains.com/webstorm/</a></p><p>visualstudio 编辑器<br><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">https://code.visualstudio.com/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;nodejs环境&quot;&gt;&lt;a href=&quot;#nodejs环境&quot; class=&quot;headerlink&quot; title=&quot;nodejs环境&quot;&gt;&lt;/a&gt;nodejs环境&lt;/h2&gt;&lt;p&gt;1.下载地址：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;中文文档-http://nodejs.cn/

      
    
    </summary>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>git</title>
    <link href="http://yoursite.com/2017/06/01/git/"/>
    <id>http://yoursite.com/2017/06/01/git/</id>
    <published>2017-06-01T06:17:36.000Z</published>
    <updated>2018-01-02T08:27:37.382Z</updated>
    
    <content type="html"><![CDATA[<h1 id="git"><a href="#git" class="headerlink" title="git"></a>git</h1><blockquote><p>Git是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。 Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。 </p><ul><li><a href="http://git.oschina.net/progit/index.html" target="_blank" rel="noopener">http://git.oschina.net/progit/index.html</a></li></ul></blockquote><h1 id="git工具"><a href="#git工具" class="headerlink" title="git工具"></a>git工具</h1><ol><li>sourcetree</li></ol><ul><li><a href="https://www.sourcetreeapp.com/" target="_blank" rel="noopener">https://www.sourcetreeapp.com/</a></li></ul><ol><li>tortoisegit</li></ol><ul><li><a href="https://tortoisegit.org/" target="_blank" rel="noopener">https://tortoisegit.org/</a></li></ul><h1 id="git常用命令"><a href="#git常用命令" class="headerlink" title="git常用命令"></a>git常用命令</h1><h2 id="专用名词"><a href="#专用名词" class="headerlink" title="专用名词"></a>专用名词</h2><blockquote><p>Workspace：工作区<br>Index / Stage：暂存区<br>Repository：仓库区（或本地仓库）<br>Remote：远程仓库</p></blockquote><h2 id="新建"><a href="#新建" class="headerlink" title="新建"></a>新建</h2><ul><li><p>新建一个目录，将其初始化为Git代码库<br>$ git init [project-name]</p></li><li><p>下载一个项目和它的整个代码历史<br>$ git clone [url]</p></li></ul><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>Git的设置文件为.gitconfig，它可以在用户主目录下（全局配置），也可以在项目目录下（项目配置）。</p><ul><li><p>显示当前的Git配置<br>$ git config –list</p></li><li><p>编辑Git配置文件<br>$ git config -e [–global]</p></li><li><p>设置提交代码时的用户信息<br>$ git config [–global] user.name “[name]”<br>$ git config [–global] user.email “[email address]”</p></li></ul><h2 id="增加-删除文件"><a href="#增加-删除文件" class="headerlink" title="增加/删除文件"></a>增加/删除文件</h2><ul><li>添加指定文件到暂存区<br>$ git add [file1] [file2] …</li></ul><ul><li><p>对于同一个文件的多处变化，可以实现分次提交<br>$ git add -p</p></li><li><p>删除工作区文件，并且将这次删除放入暂存区<br>$ git rm [file1] [file2] …</p></li><li><p>停止追踪指定文件，但该文件会保留在工作区<br>$ git rm –cached [file]</p></li><li><p>改名文件，并且将这个改名放入暂存区<br>$ git mv [file-original] [file-renamed]</p></li></ul><h2 id="代码提交"><a href="#代码提交" class="headerlink" title="代码提交"></a>代码提交</h2><ul><li><p>提交暂存区到仓库区<br>$ git commit -m [message]</p></li><li><p>提交工作区自上次commit之后的变化，直接到仓库区<br>$ git commit -a</p></li><li><p>提交时显示所有diff信息<br>$ git commit -v</p></li></ul><h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><ul><li><p>列出所有本地分支<br>$ git branch</p></li><li><p>列出所有远程分支<br>$ git branch -r</p></li><li><p>列出所有本地分支和远程分支<br>$ git branch -a</p></li><li><p>新建一个分支，但依然停留在当前分支<br>$ git branch [branch-name]</p></li><li><p>新建一个分支，并切换到该分支<br>$ git checkout -b [branch]</p></li></ul><h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><ul><li><p>列出所有tag<br>$ git tag</p></li><li><p>新建一个tag在当前commit<br>$ git tag [tag]</p></li><li><p>新建一个tag在指定commit<br>$ git tag [tag] [commit]</p></li><li><p>删除本地tag<br>$ git tag -d [tag]</p></li><li><p>删除远程tag<br>$ git push origin :refs/tags/[tagName]</p></li><li><p>查看tag信息<br>$ git show [tag]</p></li><li><p>提交指定tag<br>$ git push [remote] [tag]</p></li><li><p>提交所有tag<br>$ git push [remote] –tags</p></li></ul><h2 id="查看信息"><a href="#查看信息" class="headerlink" title="查看信息"></a>查看信息</h2><ul><li><p>显示有变更的文件<br>$ git status</p></li><li><p>显示当前分支的版本历史<br>$ git log</p></li><li><p>显示commit历史，以及每次commit发生变更的文件<br>$ git log –stat</p></li><li><p>搜索提交历史，根据关键词<br>$ git log -S [keyword]</p></li></ul><ul><li><p>显示某个文件的版本历史，包括文件改名<br>$ git log –follow [file]<br>$ git whatchanged [file]</p></li><li><p>显示指定文件相关的每一次diff<br>$ git log -p [file]</p></li><li><p>显示两次提交之间的差异<br>$ git diff [first-branch]…[second-branch]</p></li><li><p>显示今天你写了多少行代码<br>$ git diff –shortstat “@{0 day ago}”</p></li><li><p>显示某次提交的元数据和内容变化<br>$ git show [commit]</p></li><li><p>显示某次提交发生变化的文件<br>$ git show –name-only [commit]</p></li><li><p>显示某次提交时，某个文件的内容<br>$ git show [commit]:[filename]</p></li><li><p>显示当前分支的最近几次提交<br>$ git reflog</p></li></ul><h2 id="远程同步"><a href="#远程同步" class="headerlink" title="远程同步"></a>远程同步</h2><ul><li><p>下载远程仓库的所有变动<br>$ git fetch [remote]</p></li><li><p>显示所有远程仓库<br>$ git remote -v</p></li><li><p>显示某个远程仓库的信息<br>$ git remote show [remote]</p></li><li><p>增加一个新的远程仓库，并命名<br>$ git remote add [shortname] [url]</p></li><li><p>取回远程仓库的变化，并与本地分支合并<br>$ git pull [remote] [branch]</p></li><li><p>上传本地指定分支到远程仓库<br>$ git push [remote] [branch]</p></li><li><p>推送所有分支到远程仓库<br>$ git push [remote] –all</p></li></ul><h2 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h2><ul><li><p>恢复暂存区的指定文件到工作区<br>$ git checkout [file]</p></li><li><p>恢复某个commit的指定文件到暂存区和工作区<br>$ git checkout [commit] [file]</p></li><li><p>恢复暂存区的所有文件到工作区<br>$ git checkout .</p></li><li><p>重置暂存区的指定文件，与上一次commit保持一致，但工作区不变<br>$ git reset [file]</p></li><li><p>重置暂存区与工作区，与上一次commit保持一致<br>$ git reset –hard</p></li><li><p>重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变<br>$ git reset [commit]</p></li><li><p>重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致<br>$ git reset –hard [commit]</p></li><li><p>重置当前HEAD为指定commit，但保持暂存区和工作区不变<br>$ git reset –keep [commit]</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;git&quot;&gt;&lt;a href=&quot;#git&quot; class=&quot;headerlink&quot; title=&quot;git&quot;&gt;&lt;/a&gt;git&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Git是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。 Git 是 Li
      
    
    </summary>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>koa2</title>
    <link href="http://yoursite.com/2017/05/18/koa2/"/>
    <id>http://yoursite.com/2017/05/18/koa2/</id>
    <published>2017-05-18T08:19:36.000Z</published>
    <updated>2018-01-02T08:27:14.848Z</updated>
    
    <content type="html"><![CDATA[<h1 id="koa2入门"><a href="#koa2入门" class="headerlink" title="koa2入门"></a>koa2入门</h1><ul><li><a href="https://cnodejs.org/topic/5709959abc564eaf3c6a48c8" target="_blank" rel="noopener">https://cnodejs.org/topic/5709959abc564eaf3c6a48c8</a></li></ul><h1 id="koa2中文官网"><a href="#koa2中文官网" class="headerlink" title="koa2中文官网"></a>koa2中文官网</h1><blockquote><p>koa 是由 Express 原班人马打造的，致力于成为一个更小、更富有表现力、更健壮的 Web 框架。 使用 koa 编写 web 应用，通过组合不同的 generator，可以免除重复繁琐的回调函数嵌套， 并极大地提升错误处理的效率。koa 不在内核方法中绑定任何中间件， 它仅仅提供了一个轻量优雅的函数库，使得编写 Web 应用变得得心应手。</p><ul><li><a href="https://koa.bootcss.com/" target="_blank" rel="noopener">https://koa.bootcss.com/</a></li></ul></blockquote><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><blockquote><p>Koa 依赖 node v7.6.0 或 ES2015及更高版本和 async 方法支持.<br>你可以使用自己喜欢的版本管理器快速安装支持的 node 版本：<br>$ nvm install 7<br>$ npm i koa<br>$ node my-koa-app.js</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;koa2入门&quot;&gt;&lt;a href=&quot;#koa2入门&quot; class=&quot;headerlink&quot; title=&quot;koa2入门&quot;&gt;&lt;/a&gt;koa2入门&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://cnodejs.org/topic/5709959abc564
      
    
    </summary>
    
    
      <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
      <category term="koa2" scheme="http://yoursite.com/tags/koa2/"/>
    
  </entry>
  
  <entry>
    <title>express</title>
    <link href="http://yoursite.com/2017/05/10/express/"/>
    <id>http://yoursite.com/2017/05/10/express/</id>
    <published>2017-05-10T08:15:15.000Z</published>
    <updated>2018-01-02T08:27:04.256Z</updated>
    
    <content type="html"><![CDATA[<h1 id="express"><a href="#express" class="headerlink" title="express"></a>express</h1><ul><li><a href="http://www.expressjs.com.cn/guide/routing.html" target="_blank" rel="noopener">http://www.expressjs.com.cn/guide/routing.html</a></li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><ol><li><p>首先假定你已经安装了 Node.js，接下来为你的应用创建一个目录，然后进入此目录并将其作为当前工作目录。<br>$ mkdir myapp<br>$ cd myapp</p></li><li><p>通过 npm init 命令为你的应用创建一个 package.json 文件。 欲了解 package.json 是如何起作用的，请参考 Specifics of npm’s package.json handling。<br>$ npm init</p></li><li><p>此命令将要求你输入几个参数，例如此应用的名称和版本。 你可以直接按“回车”键接受默认设置即可，下面这个除外：<br>entry point: (index.js)</p><blockquote><p>键入 app.js 或者你所希望的名称，这是当前应用的入口文件。如果你希望采用默认的 index.js 文件名，只需按“回车”键即可。</p></blockquote></li><li><p>接下来安装 Express 并将其保存到依赖列表中：<br>$ npm install express –save</p><blockquote><p>如果只是临时安装 Express，不想将它添加到依赖列表中，只需略去 –save 参数即可：<br>$ npm install express</p></blockquote></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;express&quot;&gt;&lt;a href=&quot;#express&quot; class=&quot;headerlink&quot; title=&quot;express&quot;&gt;&lt;/a&gt;express&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.expressjs.com.cn/guide/r
      
    
    </summary>
    
    
      <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
      <category term="express" scheme="http://yoursite.com/tags/express/"/>
    
  </entry>
  
  <entry>
    <title>js</title>
    <link href="http://yoursite.com/2017/05/02/js/"/>
    <id>http://yoursite.com/2017/05/02/js/</id>
    <published>2017-05-02T07:41:28.000Z</published>
    <updated>2018-01-02T08:28:28.210Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是JavaScript？"><a href="#什么是JavaScript？" class="headerlink" title="什么是JavaScript？"></a>什么是JavaScript？</h1><blockquote><p>JavaScript（缩写：JS）是一门成熟的动态编程语言，当应用于HTML文档时，可以在网站上提供动态交互性。它是Mozilla项目联合创始人，Mozilla基金会和Mozilla公司的Brendan Eich发明的。</p><ul><li><a href="https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web/JavaScript_basics" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Learn/Getting_started_with_the_web/JavaScript_basics</a></li><li><a href="http://www.ruanyifeng.com/blog/javascript/" target="_blank" rel="noopener">http://www.ruanyifeng.com/blog/javascript/</a></li><li><a href="http://javascript.ruanyifeng.com/#introduction" target="_blank" rel="noopener">http://javascript.ruanyifeng.com/#introduction</a></li><li><a href="https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000</a></li><li><a href="http://liubin.org/promises-book/" target="_blank" rel="noopener">http://liubin.org/promises-book/</a></li><li><a href="http://www.aseoe.com/manual/js/" target="_blank" rel="noopener">http://www.aseoe.com/manual/js/</a></li><li><a href="http://www1.qdfuns.com/feres.php?do=picture&amp;listtype=book" target="_blank" rel="noopener">http://www1.qdfuns.com/feres.php?do=picture&amp;listtype=book</a></li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;什么是JavaScript？&quot;&gt;&lt;a href=&quot;#什么是JavaScript？&quot; class=&quot;headerlink&quot; title=&quot;什么是JavaScript？&quot;&gt;&lt;/a&gt;什么是JavaScript？&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;JavaScrip
      
    
    </summary>
    
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="js" scheme="http://yoursite.com/tags/js/"/>
    
      <category term="day-to-day" scheme="http://yoursite.com/tags/day-to-day/"/>
    
  </entry>
  
  <entry>
    <title>NodeJS</title>
    <link href="http://yoursite.com/2017/05/01/NodeJS/"/>
    <id>http://yoursite.com/2017/05/01/NodeJS/</id>
    <published>2017-05-01T07:57:33.000Z</published>
    <updated>2018-01-02T08:26:47.710Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a>nodejs</h1><blockquote><p>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。<br>Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。<br>Node.js 的包管理器 npm，是全球最大的开源库生态系统。</p></blockquote><ul><li>nodejs中文官网：<a href="http://nodejs.cn/" target="_blank" rel="noopener">http://nodejs.cn/</a></li><li>nodejs社区：<a href="https://cnodejs.org/" target="_blank" rel="noopener">https://cnodejs.org/</a></li><li>快速入门： <a href="http://nqdeng.github.io/7-days-nodejs/#1.1" target="_blank" rel="noopener">http://nqdeng.github.io/7-days-nodejs/#1.1</a></li></ul><h1 id="利用n和nvm管理Node的版本"><a href="#利用n和nvm管理Node的版本" class="headerlink" title="利用n和nvm管理Node的版本"></a>利用n和nvm管理Node的版本</h1><h2 id="n"><a href="#n" class="headerlink" title="n"></a>n</h2><blockquote><p>n是Node的一个模块，作者是TJ Holowaychuk（鼎鼎大名的Express框架作者），就像它的名字一样，它的理念就是简单.</p></blockquote><ol><li>安装很简单：</li></ol><ul><li>$ sudo npm install -g n</li></ul><blockquote><p>安装完成之后，直接输入n后输出当前已经安装的node版本以及正在使用的版本（前面有一个o），你可以通过移动上下方向键来选择要使用的版本，最后按回车生效。<br>$ n<br>    6.08.1<br>o    6.10.2</p></blockquote><ol><li><p>安装最新的版本<br>$ n latest</p></li><li><p>安装稳定版本<br>$ n stable</p></li><li><p>删除某个版本<br>$ n rm 0.10.1</p></li></ol><h2 id="nvm"><a href="#nvm" class="headerlink" title="nvm"></a>nvm</h2><blockquote><p>nvm全称Node Version Manager，它与n的实现方式不同，其是通过shell脚本实现的。</p></blockquote><ol><li><p>安装方式有两种：<br>$ curl <a href="https://raw.github.com/creationix/nvm/v0.4.0/install.sh" target="_blank" rel="noopener">https://raw.github.com/creationix/nvm/v0.4.0/install.sh</a> | sh<br>或者<br>$ wget -qO- <a href="https://raw.github.com/creationix/nvm/v0.4.0/install.sh" target="_blank" rel="noopener">https://raw.github.com/creationix/nvm/v0.4.0/install.sh</a> | sh</p></li><li><p>使用指定的版本<br>$ nvm use 6.10.2</p></li><li><p>查看当前已经安装的版本<br>$ nvm ls<br>.nvm<br>-&gt;  v6.10.2</p></li><li><p>查看正在使用的版本<br>$ nvm current<br>v6.10.2</p></li><li><p>卸载nvm<br>$ rm -rf ~/.nvm</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;nodejs&quot;&gt;&lt;a href=&quot;#nodejs&quot; class=&quot;headerlink&quot; title=&quot;nodejs&quot;&gt;&lt;/a&gt;nodejs&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行
      
    
    </summary>
    
    
      <category term="nodejs" scheme="http://yoursite.com/tags/nodejs/"/>
    
  </entry>
  
</feed>
